/**
 * nums = [2,7,11,15],
 * target = 9
 * <p>
 * output : [0,1]
 * 1. Can there be more than one possible combination? : Yes, any value you can return.
 * 2. 2 numbers sum or can more values also contribute to it? 2 values
 * 3. Does ordering matter? 0,1  --> 1,0  --> 1
 * 4. What are we going to return
 * <p>
 * <p>
 * 2 --> 7
 * 11
 * 15
 * <p>
 * 7 --> 11
 * 15
 * <p>
 * 11 --> 15
 */

public class SumProblem {
    public static void main(String[] args) {
        int arr[] = {2, 7, 11, 15};
        int target = 9;
        int[] pair = pairCorrespondingToSum(arr, target);
        if(pair[0] == -1){
            //no Pair
        }

    }

    public static int[] pairCorrespondingToSum(int[] nums, int target) {
        for (int i = 0; i < nums.length - 1; i++) {
            int first = nums[i];
            for (int j = i + 1; j < nums.length; j++) {
                int second = nums[j];
                if (first + second == target) {
                    return new int[]{i, j};
                }
            }
        }

        return new int[]{-1};
    }


}
